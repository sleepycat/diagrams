vars: {
  d2-config: {
    layout-engine: elk
    # Terminal theme code
    theme-id: 300
  }
}

pushmodel: Push based model: Azure Devops to App Service {
  shape: sequence_diagram

  appservice: App Service {
    shape: image
    icon: https://icons.terrastruct.com/azure%2FWeb%20Service%20Color%2FApp%20Services.svg
  }
  acr: Container Registry {
    shape: image
    icon: https://icons.terrastruct.com/azure%2FContainer%20Service%20Color%2FContainer%20Registries.svg
  }
  fw: Firewall {
    shape: image
    icon: https://icons.terrastruct.com/azure%2FNetworking%20Service%20Color%2FAzure%20Firewall.svg
  }
  activedirectory: Active Directory {
    shape: image
    icon: https://icons.terrastruct.com/azure%2FIdentity%20Service%20Color%2FActive%20Directory.svg
  }

  pipelines: Hosted Agents {
    shape: image
    icon: https://icons.terrastruct.com/azure%2FDevOps%20Service%20Color%2FAzure%20Pipelines.svg
  }

  # ADO stores tokens like SSH keys in a US data center no matter what data residency settings you choose?
  # https://learn.microsoft.com/en-us/azure/devops/organizations/security/data-location?view=azure-devops#token-data
  #
  # ADO needs access to your tenant via the public internet and requires IP whitelisting to allow agents through your firewall?
  # "This may increase your exposure as the range of IP addresses is rather large and since machines in this range can belong to other customers as well."
  # https://learn.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops&tabs=yaml#networking
  #
  # ADO uses oidc identity federation to auth to access your tenant?
  # https://devblogs.microsoft.com/devops/introduction-to-azure-devops-workload-identity-federation-oidc-with-terraform/
  ado: dev.azure.com/orgname {
    shape: image
    icon: https://icons.terrastruct.com/azure%2FDevOps%20Service%20Color%2FAzure%20DevOps.svg
  }
  activedirectory -> activedirectory: App registration allowing DevOps authentication
  fw -> fw: open ports to Azure IP ranges
  ado -> activedirectory: auth with OIDC
  activedirectory -> ado: auth success
  ado -> pipelines: build OCI image
  pipelines -> acr: Push image to ACR
  pipelines -> appservice: prompt redeploy
  appservice -> appservice: Pull and run new image
}

explanation: |md
  # Push based deployment
  Model for deploying Django apps in Azure.

  Team interactions: 
    * Firewall team to allow hosted agent IP range
    * M365 team creates Azure app registration

| {near: center-left}
